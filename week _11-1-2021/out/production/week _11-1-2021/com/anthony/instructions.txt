Java:

1) Create a function which simulates the game "rock, paper, scissors". The function takes the input of both players (rock, paper or scissors), first parameter from first player, second from second player. The function returns the result as such:

"Player 1 wins"
"Player 2 wins"
"TIE" (if both inputs are the same)

The rules of rock, paper, scissors, if not known:

- Both players have to say either "rock", "paper" or "scissors" at the same time.
- Rock beats scissors, paper beats rock, scissors beat paper.

Examples
rps("rock", "paper") --> "Player 2 wins"

rps("paper", "rock") --> "Player 1 wins"

rps("paper", "scissors") --> "Player 2 wins"

rps("scissors", "scissors") --> "TIE"

rps("scissors", "paper") --> "Player 1 wins"

2) Create a function that takes a string of words and moves the first letter of each word to the end of it, then adds "ay" to the end of the word. This is called "Pig Latin" and it gets more complicated than the rules in this particular challenge. I've intentionally kept things simple, otherwise this would turn into an extremely tedious challenge.

Move the first letter of each word to the end of the word.
Add "ay" to the end of the word.
Words starting with a vowel (A, E, I, O, U) simply have "WAY" appended to the end.
Examples
pigLatin("Cats are great pets.")
--> "Atscay areway reatgay etspay."

pigLatin("Tom got a small piece of pie.")
--> "Omtay otgay away mallsay iecepay ofway iepay."

pigLatin("He told us a very exciting tale.")
--> "Ehay oldtay usway away eryvay excitingway aletay."

Notes
Be sure to preserve proper capitalization and punctuation.